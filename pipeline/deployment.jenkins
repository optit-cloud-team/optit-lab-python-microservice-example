pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'bktest',
                    credentialsId: 'bharath',
                    url: 'https://github.com/optit-cloud-team/optit-lab-python-microservice-example.git'
                }
            }
        }

        stage('Deploy and Update Deployment') {
            steps {
                script {
                    def manifestsDir = 'kubernetes/manifest'

                    withCredentials([file(credentialsId: 'poc-kube-cluster-cred-1', variable: 'KUBECONFIG')]) {
                        // Delete deployments
                        sh "kubectl delete -f ${manifestsDir}/producer/producer-deployment.yaml -n bktest"
                        sh "kubectl delete -f ${manifestsDir}/consumer_one/deployment.yaml -n bktest"
                        sh "kubectl delete -f ${manifestsDir}/consumer_two/deployment.yaml -n bktest"
                        sh "kubectl delete -f ${manifestsDir}/consumer_three/deployment.yaml -n bktest"
                        sh "kubectl delete -f ${manifestsDir}/consumer_four/deployment.yaml -n bktest"

                        // Apply deployments
                        sh "kubectl apply -f ${manifestsDir}/producer/producer-deployment.yaml -n bktest"
                        sh "kubectl apply -f ${manifestsDir}/consumer_one/deployment.yaml -n bktest"
                        sh "kubectl apply -f ${manifestsDir}/consumer_two/deployment.yaml -n bktest"
                        sh "kubectl apply -f ${manifestsDir}/consumer_three/deployment.yaml -n bktest"
                        sh "kubectl apply -f ${manifestsDir}/consumer_four/deployment.yaml -n bktest"
                    }
                }
            }
        }

        
        }
    }
}
